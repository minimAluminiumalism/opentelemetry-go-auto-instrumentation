services:
  kratos-demo:
    build: .
    container_name: kratos-demo
    environment:
      - OTEL_SERVICE_NAME=kratos-demo
      - OTEL_TRACES_EXPORTER=otel
      - OTEL_METRICS_EXPORTER=otel
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf
    ports:
      - "8080:8080"
      - "8081:8081"

  jaeger:
    image: jaegertracing/all-in-one:1.73.0
    container_name: jaeger
    restart: always
    ports:
      - "16686:16686"
      - "14250:14250"
      - "6831:6831/udp"
    environment:
      - TZ=Asia/Shanghai
      - COLLECTOR_OTLP_ENABLED=true
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:16686/"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  prometheus:
    image: prom/prometheus:v3.5.0
    container_name: prometheus
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./etc/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-lifecycle"
    healthcheck:
      test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:9090/-/healthy"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.119.0
    container_name: otel-collector
    environment:
      - TZ=Asia/Shanghai
    volumes:
      - ./etc/controller-config.yaml:/etc/otel-config.yaml
    command: ["--config=/etc/otel-config.yaml"]
    ports:
      - "4318:4318"
      - "8889:8889"
    depends_on:
      jaeger:
        condition: service_healthy
      prometheus:
        condition: service_healthy